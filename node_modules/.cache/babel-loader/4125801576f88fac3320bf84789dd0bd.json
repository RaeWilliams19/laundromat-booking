{"ast":null,"code":"import _slicedToArray from \"/Users/rae/projects/flowbox/laundry-booking/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rae/projects/flowbox/laundry-booking/src/components/calendar/Calendar.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\nexport default function Calendar() {\n  const _useState = useState(moment()),\n        _useState2 = _slicedToArray(_useState, 1),\n        date = _useState2[0];\n\n  const weekdaysShort = moment.weekdaysShort();\n\n  const currentWeekNumber = () => {\n    return date.week();\n  };\n\n  console.log(date.week(), date.startOf('week'), moment().add(1, 'weeks').startOf('week'));\n\n  const today = () => {\n    return parseInt(date.format(\"D\"));\n  };\n\n  const startOfCurrentWeek = () => {\n    date.startOf('week');\n  };\n\n  const firstDayOfMonth = () => {\n    let dateObject = date;\n    let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n    return firstDay;\n  };\n\n  const generateCalendarBody = () => {\n    let blanks = [];\n\n    for (let i = 0; i < firstDayOfMonth(); i++) {\n      blanks.push(React.createElement(\"td\", {\n        key: i * 80,\n        className: \"calendar-day empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"\"));\n    }\n\n    let daysInMonth = [];\n\n    for (let d = 1; d <= numberOfDaysInMonth(); d++) {\n      let currentDay = d === today() ? \"today\" : \"\";\n      daysInMonth.push(React.createElement(\"td\", {\n        key: d,\n        className: \"calendar-day \".concat(currentDay),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, d));\n    }\n\n    const totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row); // if index not equal 7 that means not go to next week\n      } else {\n        rows.push(cells); // when reach next week we contain all td in last week to rows \n\n        cells = []; // empty container \n\n        cells.push(row); // in current loop we still push current row to new container\n      }\n\n      if (i === totalSlots.length - 1) {\n        // when end loop we add remain date\n        rows.push(cells);\n      }\n    });\n    let totalDaysInMonth = rows.map((d, i) => {\n      return React.createElement(\"tr\", {\n        key: i * 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, d);\n    });\n    return totalDaysInMonth;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"calendar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    colSpan: \"7\",\n    className: \"calendar-month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, month())), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, weekdaysShort.map(day => React.createElement(\"th\", {\n    key: day,\n    className: \"week-day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, day)))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, generateCalendarBody())));\n}","map":{"version":3,"sources":["/Users/rae/projects/flowbox/laundry-booking/src/components/calendar/Calendar.js"],"names":["React","useState","moment","Calendar","date","weekdaysShort","currentWeekNumber","week","console","log","startOf","add","today","parseInt","format","startOfCurrentWeek","firstDayOfMonth","dateObject","firstDay","generateCalendarBody","blanks","i","push","daysInMonth","d","numberOfDaysInMonth","currentDay","totalSlots","rows","cells","forEach","row","length","totalDaysInMonth","map","month","day"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\n\nexport default function Calendar() {\n    const [date] = useState(moment())\n    const weekdaysShort = moment.weekdaysShort();\n\n    const currentWeekNumber = () => {\n        return date.week();\n    };\nconsole.log(date.week(), date.startOf('week'), moment().add(1, 'weeks').startOf('week'))\n    const today = () => {\n        return parseInt(date.format(\"D\"));\n    };\n\n    const startOfCurrentWeek = () => {\n        date.startOf('week')\n    }\n\n    const firstDayOfMonth = () => {\n        let dateObject = date;\n        let firstDay = moment(dateObject)\n            .startOf(\"month\")\n            .format(\"d\");\n        return firstDay;\n    };\n\n    const generateCalendarBody = () => {\n        let blanks = [];\n        for (let i = 0; i < firstDayOfMonth(); i++) {\n            blanks.push(\n                <td key={i * 80} className=\"calendar-day empty\">{\"\"}</td>\n            );\n        }\n\n        let daysInMonth = [];\n        for (let d = 1; d <= numberOfDaysInMonth(); d++) {\n            let currentDay = d === today() ? \"today\" : \"\";\n            daysInMonth.push(\n                <td key={d} className={`calendar-day ${currentDay}`}>\n                    {d}\n                </td>\n            );\n        }\n        const totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n        totalSlots.forEach((row, i) => {\n            if (i % 7 !== 0) {\n                cells.push(row); // if index not equal 7 that means not go to next week\n            } else {\n                rows.push(cells); // when reach next week we contain all td in last week to rows \n                cells = []; // empty container \n                cells.push(row); // in current loop we still push current row to new container\n            }\n            if (i === totalSlots.length - 1) { // when end loop we add remain date\n                rows.push(cells);\n            }\n        });\n        let totalDaysInMonth = rows.map((d, i) => {\n            return <tr key={i * 100}>{d}</tr>;\n        });\n        return totalDaysInMonth\n    }\n\n    return (\n        <div className=\"calendar\">\n            <table>\n                <thead>\n                    <tr>\n                        <th colSpan=\"7\" className=\"calendar-month\">{month()}</th>\n                    </tr>\n                    <tr>\n                        {weekdaysShort.map(day =>\n                            <th key={day} className=\"week-day\">\n                                {day}\n                            </th>\n                        )}\n                    </tr>\n                </thead>\n                <tbody>\n                    {generateCalendarBody()}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}