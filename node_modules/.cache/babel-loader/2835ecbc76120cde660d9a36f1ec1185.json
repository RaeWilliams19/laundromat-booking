{"ast":null,"code":"import _slicedToArray from \"/Users/rae/projects/flowbox/laundry-booking/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rae/projects/flowbox/laundry-booking/src/components/calendar/Calendar.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\nexport default function Calendar() {\n  const _useState = useState(moment()),\n        _useState2 = _slicedToArray(_useState, 1),\n        date = _useState2[0];\n\n  const _useState3 = useState(date.week()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        week = _useState4[0],\n        setWeek = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        daysInWeek = _useState6[0],\n        setDaysInWeek = _useState6[1];\n\n  const weekdaysShort = moment.weekdaysShort();\n\n  const today = () => {\n    return parseInt(date.format(\"D\"));\n  };\n\n  const currentWeek = () => {\n    const days = [];\n    const startDate = date.startOf('week');\n\n    for (let i = 0; i < 7; i++) {\n      days.push(moment(startDate).add(i, 'day').format(\"D\"));\n    }\n\n    setDaysInWeek(days);\n  };\n\n  const nextWeek = weekNum => {\n    const daysInWeek = [];\n    const startDate = date.week(weekNum).add(1, 'weeks').startOf('week');\n\n    for (let i = 0; i < 7; i++) {\n      daysInWeek.push(moment(startDate).add(i, 'day'));\n    }\n\n    return daysInWeek;\n  };\n\n  const lastWeek = weekNum => {\n    const daysInWeek = [];\n    const startDate = date.week(weekNum).subtract(1, 'weeks').startOf('week');\n\n    for (let i = 0; i < 7; i++) {\n      daysInWeek.push(moment(startDate).add(i, 'day'));\n    }\n\n    return daysInWeek;\n  };\n  /* const generateCalendarBody = () => {\n      let blanks = [];\n      for (let i = 0; i < firstDayOfMonth(); i++) {\n          blanks.push(\n              <td key={i * 80} className=\"calendar-day empty\">{\"\"}</td>\n          );\n      }\n       let daysInMonth = [];\n      for (let d = 1; d <= numberOfDaysInMonth(); d++) {\n          let currentDay = d === today() ? \"today\" : \"\";\n          daysInMonth.push(\n              <td key={d} className={`calendar-day ${currentDay}`}>\n                  {d}\n              </td>\n          );\n      }\n      const totalSlots = [...blanks, ...daysInMonth];\n      let rows = [];\n      let cells = [];\n      totalSlots.forEach((row, i) => {\n          if (i % 7 !== 0) {\n              cells.push(row); // if index not equal 7 that means not go to next week\n          } else {\n              rows.push(cells); // when reach next week we contain all td in last week to rows \n              cells = []; // empty container \n              cells.push(row); // in current loop we still push current row to new container\n          }\n          if (i === totalSlots.length - 1) { // when end loop we add remain date\n              rows.push(cells);\n          }\n      });\n      let totalDaysInMonth = rows.map((d, i) => {\n          return <tr key={i * 100}>{d}</tr>;\n      });\n      return totalDaysInMonth\n  }\n  */\n\n\n  return React.createElement(\"div\", {\n    className: \"calendar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    colSpan: \"7\",\n    className: \"calendar-month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Week \" + week)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, weekdaysShort.map(day => React.createElement(\"th\", {\n    key: day,\n    className: \"week-day\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, day)))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, currentWeek())));\n}","map":{"version":3,"sources":["/Users/rae/projects/flowbox/laundry-booking/src/components/calendar/Calendar.js"],"names":["React","useState","moment","Calendar","date","week","setWeek","daysInWeek","setDaysInWeek","weekdaysShort","today","parseInt","format","currentWeek","days","startDate","startOf","i","push","add","nextWeek","weekNum","lastWeek","subtract","map","day"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport './Calendar.css';\n\nexport default function Calendar() {\n    const [date] = useState(moment());\n    const [week, setWeek] = useState(date.week())\n    const [daysInWeek, setDaysInWeek] = useState()\n    const weekdaysShort = moment.weekdaysShort();\n\n    const today = () => {\n        return parseInt(date.format(\"D\"));\n    };\n\n    const currentWeek = () => {\n        const days = [];\n        const startDate = date.startOf('week');\n        for(let i = 0; i < 7; i++){\n            days.push(moment(startDate).add(i, 'day').format(\"D\"));\n        }\n        setDaysInWeek(days);\n    }\n\n    const nextWeek = (weekNum) => {\n        const daysInWeek = [];\n        const startDate = date.week(weekNum).add(1, 'weeks').startOf('week')\n        for(let i = 0; i < 7; i++){\n            daysInWeek.push(moment(startDate).add(i, 'day'));\n        }\n        return daysInWeek;\n    }\n\n    const lastWeek = (weekNum) => {\n        const daysInWeek = [];\n        const startDate = date.week(weekNum).subtract(1, 'weeks').startOf('week');\n        for(let i = 0; i < 7; i++){\n            daysInWeek.push(moment(startDate).add(i, 'day'));\n        }\n        return daysInWeek;\n    }\n    \n    /* const generateCalendarBody = () => {\n        let blanks = [];\n        for (let i = 0; i < firstDayOfMonth(); i++) {\n            blanks.push(\n                <td key={i * 80} className=\"calendar-day empty\">{\"\"}</td>\n            );\n        }\n\n        let daysInMonth = [];\n        for (let d = 1; d <= numberOfDaysInMonth(); d++) {\n            let currentDay = d === today() ? \"today\" : \"\";\n            daysInMonth.push(\n                <td key={d} className={`calendar-day ${currentDay}`}>\n                    {d}\n                </td>\n            );\n        }\n        const totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n        totalSlots.forEach((row, i) => {\n            if (i % 7 !== 0) {\n                cells.push(row); // if index not equal 7 that means not go to next week\n            } else {\n                rows.push(cells); // when reach next week we contain all td in last week to rows \n                cells = []; // empty container \n                cells.push(row); // in current loop we still push current row to new container\n            }\n            if (i === totalSlots.length - 1) { // when end loop we add remain date\n                rows.push(cells);\n            }\n        });\n        let totalDaysInMonth = rows.map((d, i) => {\n            return <tr key={i * 100}>{d}</tr>;\n        });\n        return totalDaysInMonth\n    }\n */\n    return (\n        <div className=\"calendar\">\n            <table>\n                <thead>\n                    <tr>\n                        <th colSpan=\"7\" className=\"calendar-month\">{\"Week \" + week}</th>\n                    </tr>\n                    <tr>\n                        {weekdaysShort.map(day =>\n                            <th key={day} className=\"week-day\">\n                                {day}\n                            </th>\n                        )}\n                    </tr>\n                </thead>\n                <tbody>\n                    {currentWeek()}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}